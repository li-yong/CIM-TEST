[setup]
[[init]]
note=init poolName in t0_debug.ini
poolName=pool_ryan
lunName=lun_ryan_${ThreadName}
lunSize=10

[[Action1:emuInstance]]
note=eI, get cim_storageconfig service.
rst=myInstList
clsName=cim_storageconfigurationservice
check1=astAtLeastOneInst(${myInstList}) 

[[Action2: queryInstance]]
note=qI, make sure has the pool inst.
rst=ac2Rst
cql=select * from cim_storagepool where cim_storagepool.elementname='${poolName}'
check1=astAtLeastOneInst(${ac2Rst})

[[Action4: InvokeMethod]]
note='iM, create lun'
waitJobComplete=true
expectedJobResult=Success
rst=act2Rst
methodName=  CreateOrModifyElementFromStoragePool
par1= ${myInstList}[0].path    
par2= ElementName='${lunName}'
par3= ElementType=pywbem.Uint16(2)
par4= InPool=${ac2Rst}[0].path
par5= Size=pywbem.Uint64(${lunSize})

[[Action5: queryInstance]]
note=qI, make sure lun created
rst=ac5Rst
cql=select * from cim_storagevolume where cim_storagevolume.elementname='${lunName}'
check1=astAtLeastOneInst(${ac5Rst})

[execute]
[[Action6: queryAssociator]]
note='qA, make sure Asso created'
rst=act6Rst
waitJobComplete=true
ObjectName=${ac5Rst}[0].path
AssocClass='cim_allocatedfromstoragepool'
check1=astAtLeastOneInst(${act6Rst})

[teardown]
[[Action7: InvokeMethod]]
note='iM, remove the lun'
waitJobComplete=true
rst=act7Rst
methodName=ReturnToStoragePool
par1=   ${myInstList}[0].path 
par2=   TheElement=${ac5Rst}[0].path

#indicator=on
#waittime is calculated from job started, included job executing time.
indiWaittime=100
indiFilterCql='SELECT * FROM CIM_InstDeletion WHERE SourceInstance ISA CIM_StorageVolume'
indiFilterExpKw='OSLS_InstDeletion,lun_ryan'


[[Action8: queryInstance]]
note='qI, check lun was removed'
rst=ac8Rst
cql=select * from cim_storagevolume where cim_storagevolume.elementname='${lunName}'
check1=astZeroInst(${ac8Rst})